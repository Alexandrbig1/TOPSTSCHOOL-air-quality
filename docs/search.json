[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome SCHOOL Module 2: Air Quality",
    "section": "",
    "text": "Welcome to the second module of the SCHOOL curriculum!\nThe Science Core Heuristics for Open Science Outcomes in Learning (SCHOOL) is part of the NASA Transform to Open Science (TOPS) Training (TOPST) initiative, designed to teach the data science lifecycle using data from the NASA Earth Sciences division and to foster an inclusive culture of open science. You can learn more about the SCHOOL Project and other modules on the SCHOOL Project home page.\nThe second SCHOOL module on the theme of “Air Quality and Health” explores how particulates in the air impact humans and how they are affected by the changes in air quality. The module consists of three use cases that cover examples of …… and …. such as …..\nEach use case uses a unique dataset to walk users through lessons in accessing and analyzing data, and further adapting the code to perform their analyses including data cleaning, processing to subset to an area of interest, and creating visualizations to share what they have learned with their communities.\nThis module is tailored to instruct undergraduate students and early-career researchers with some coding language exposure about the data science life cycle, illustrating how Open Science principles can be effectively applied to earth sciences, particularly in the context of water.\nThe SCHOOL Modules do not intend to teach all-encompassing earth science lessons nor provide learners with total coding expertise. Instead, the SCHOOL Project aims to provide users with the skills to adapt the SCHOOL lessons to the users’ own Open Science workflow. To learn more about Open Science, explore NASA’s TOPS Open Science 101 Curriculum. To explore other themes in the SCHOOL project, visit our Modules Page.\nModule 2: Air Quality datasets and use cases cover:\n\nEnabling Student-led Air Quality and Extreme Temperature Monitoring in New York: Examining the relationship between two environmental hazards – hazardous air quality and temperature – and socioeconomic characteristics of New York State (NYS) schools.\n\nLesson 1: Acquiring, Pre-Processing, and Visualizing Student-Monitored Data for New York City (NYC) Schools\n\nSocial Vulnerability Index (SVI) Social Determinants of Health, and the EJScreen: Environmental Justice Screening and Mapping Tool: Exploring social determinants of health within the USA with the SVI; EJScreen is the Environmental justice mapping and screening tool that helps users understand the environmental and demographic characteristics of a specific area.\n\nLesson 2: Exploring the Social Vulnerability Index (SVI) Social Determinants of Health, and the EJScreen: Environmental Justice Screening and Mapping Tool\n\nGlobal Gridded Relative Deprivation Index Version 1 (GRDIv1), and the Global (GL) Annual PM2.5 Grids from MODIS, MISR and SeaWiFS Aerosol Optical Depth: Analyzing the global relationships between socioeconomic vulnerability and particulate matter concentrations over years.\n\nLesson 3: Global Gridded Relative Deprivation Index Version 1 (GRDIv1) and the Global Annual PM2.5 Grids\n\n\n\nStart Lesson 1\n\nThis course was made possible thanks to the work of our NASA Transform to Open Science (TOPS) team, our SCHOOL Open Science team, open science Subject Matter Experts (SMEs), and the SCHOOL Development team!"
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html",
    "href": "m201-student-led-monitoring-nyc.html",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "",
    "text": "In this lesson, you will use…."
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html#learning-objectives",
    "href": "m201-student-led-monitoring-nyc.html#learning-objectives",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter completing this lesson, you should be able to:\n\nDetermine…"
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html#introduction",
    "href": "m201-student-led-monitoring-nyc.html#introduction",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "Introduction",
    "text": "Introduction\nThis project, “Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York,” led by Carolynne Hultquist and her team, aims to engage students in monitoring environmental hazards, specifically hazardous air quality and extreme temperature, outside and inside New York State schools. The focus is on New York City (NYC) schools serving low-income minority populations located in environmental justice communities characterized by high levels of hazard exposure. By incorporating mobile and static monitoring techniques, students contribute to data collection and analysis, integrating satellite data and sensor networks. This initiative not only provides valuable data on environmental conditions but also educates students on the principles of open science and the data science life cycle."
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html#data-collection-and-preparation",
    "href": "m201-student-led-monitoring-nyc.html#data-collection-and-preparation",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "Data Collection and Preparation",
    "text": "Data Collection and Preparation\n\nMobile and Static Monitoring\nEquip students with mobile sensors to collect air quality data. Compare this with data from static sensors placed in schools and remote sensing sources.\n\n\nSatellite Data Integration\nUtilize satellite data such as MODIS, OMI, MERRA-2, GOES, CHIRTS-daily, and SEDAC’s Air Quality Data to complement ground data.\n\n\nData Upload and Management\nStudents upload collected data to an online platform, ensuring proper documentation and metadata inclusion to maintain data quality and integrity."
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html#data-cleaning-and-preprocessing",
    "href": "m201-student-led-monitoring-nyc.html#data-cleaning-and-preprocessing",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "Data Cleaning and Preprocessing",
    "text": "Data Cleaning and Preprocessing\n\nData Validation\nCheck for inconsistencies or anomalies in the collected data. This includes cross-referencing mobile sensor data with static and satellite data to ensure accuracy.\n\n\nHandling Missing Data\nApply techniques such as interpolation or imputation to address missing data points, ensuring a complete dataset for analysis."
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html#data-analysis-and-visualization",
    "href": "m201-student-led-monitoring-nyc.html#data-analysis-and-visualization",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "Data Analysis and Visualization",
    "text": "Data Analysis and Visualization\n\nDescriptive Statistics\nCalculate basic statistics (mean, median, mode, standard deviation) to understand the distribution and central tendencies of the data.\n\n\nCorrelation Analysis\nExamine relationships between air quality, temperature, and socioeconomic characteristics of the schools.\n\n\nVisualization\nUse tools like ArcGIS Online for participatory mapping and visualizations to represent data spatially and temporally. Modeling and Interpretation\n\n\nPredictive Modeling\nDevelop models to predict air quality and temperature variations based on historical data and current trends. Impact Analysis: Assess the health impacts of hazardous air quality and extreme temperatures on school populations, with a focus on vulnerable groups. Reporting and Communication\n\n\nStory Development\nEngage with the Solutions Journalism Network to develop stories that highlight the project’s findings and advocate for environmental justice.\n\n\nPublications and Presentations\nCompile findings into reports, articles, and presentations for dissemination through academic channels and public forums."
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html#open-science-principles-and-data-sharing",
    "href": "m201-student-led-monitoring-nyc.html#open-science-principles-and-data-sharing",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "Open Science Principles and Data Sharing",
    "text": "Open Science Principles and Data Sharing\n\nTransparency\nEnsure all data processing steps, methodologies, and code are well-documented and accessible.\n\n\nReproducibility\nProvide clear instructions and datasets for others to replicate the study.\n\n\nData Sharing\nPublish datasets and findings in open-access repositories to promote further research and collaboration.\nCongratulations! …. Now you should be able to:\n\nTest test."
  },
  {
    "objectID": "m201-student-led-monitoring-nyc.html#lesson-2",
    "href": "m201-student-led-monitoring-nyc.html#lesson-2",
    "title": "Enabling Student-led Air Quality and Extreme Temperature Monitoring in New York",
    "section": "Lesson 2",
    "text": "Lesson 2\nIn this lesson, we explored ….\nLesson 2: EJSCREEN"
  },
  {
    "objectID": "m202-ejscreen.html",
    "href": "m202-ejscreen.html",
    "title": "EJSCREEN tool",
    "section": "",
    "text": "In this lesson, you will use…."
  },
  {
    "objectID": "m202-ejscreen.html#learning-objectives",
    "href": "m202-ejscreen.html#learning-objectives",
    "title": "EJSCREEN tool",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter completing this lesson, you should be able to:\n\nDetermine…"
  },
  {
    "objectID": "m202-ejscreen.html#introduction",
    "href": "m202-ejscreen.html#introduction",
    "title": "EJSCREEN tool",
    "section": "Introduction",
    "text": "Introduction\nIn recent years, researchers have explored the intersection between environmental factors and public health, particularly concerning diseases like COVID-19 and non-small cell lung cancer (NSCLC). Studies have highlighted the impact of air pollution on disease susceptibility and outcomes, emphasizing the need for rigorous analysis and understanding of these relationships. This overview focuses on several key studies that utilize data science principles to investigate how environmental justice, air pollution, and demographic factors intersect, providing insights that contribute to open science principles and the data science life cycle."
  },
  {
    "objectID": "m202-ejscreen.html#data-collection-and-integration",
    "href": "m202-ejscreen.html#data-collection-and-integration",
    "title": "EJSCREEN tool",
    "section": "Data Collection and Integration",
    "text": "Data Collection and Integration\nGather comprehensive datasets from reliable sources such as the US EPA’s EJSCREEN tool and other public health databases like John Hopkins and County Health Rankings. Integrate relevant environmental data (e.g., air pollutant concentrations, pollution source proximity) with health outcomes data (e.g., COVID-19 prevalence, NSCLC incidence). Ensure data compatibility and quality through data cleaning and validation procedures.\n\nExploratory Data Analysis (EDA)\nConduct initial exploratory analyses to understand the distribution and relationships within the data. Visualize data using plots and charts to identify patterns and correlations between environmental factors, demographic variables, and health outcomes. Perform statistical tests to assess associations and identify potential confounding factors.\n\n\nModel Development and Analysis\nApply statistical models (e.g., regression analyses, machine learning algorithms) to quantify the relationships between environmental exposures and health outcomes. Adjust for confounders such as demographic characteristics (e.g., age, race/ethnicity) and socioeconomic factors (e.g., income, education). Validate models using cross-validation techniques to ensure robustness and generalizability of findings.\n\n\nInterpretation and Communication of Results\nInterpret findings in the context of environmental justice principles, highlighting disparities and vulnerabilities observed in different populations. Discuss implications for public health policy and environmental regulations based on study outcomes. Communicate results transparently using accessible language and visual aids to engage stakeholders and the broader community."
  },
  {
    "objectID": "m202-ejscreen.html#the-data-science-life-cycle",
    "href": "m202-ejscreen.html#the-data-science-life-cycle",
    "title": "EJSCREEN tool",
    "section": "The Data Science Life Cycle",
    "text": "The Data Science Life Cycle\nThe data science life cycle guides the systematic approach to handling data from collection to interpretation:\n\nData Acquisition\nObtain relevant datasets from sources like EJSCREEN, County Health Rankings, and specific studies’ databases. ### Data Preparation Clean and preprocess data to ensure accuracy and consistency, handling missing values and outliers appropriately.\n\n\nExploratory Data Analysis\nExplore data distributions, correlations, and initial insights to guide further analysis.\n\n\nModeling\nDevelop statistical models to test hypotheses and predict outcomes, considering factors like pollution exposure and demographic variables.\n\n\nEvaluation\nAssess model performance and validity through metrics and cross-validation techniques.\n\n\nDeployment\nCommunicate findings through reports, presentatio\nCongratulations! …. Now you should be able to:\n\nTest test…"
  },
  {
    "objectID": "m202-ejscreen.html#lesson-2",
    "href": "m202-ejscreen.html#lesson-2",
    "title": "EJSCREEN tool",
    "section": "Lesson 2",
    "text": "Lesson 2\nIn this lesson, we explored ….\nLesson 2: EJSCREEN"
  },
  {
    "objectID": "m202-ejscreen.html#lesson-3",
    "href": "m202-ejscreen.html#lesson-3",
    "title": "EJSCREEN tool",
    "section": "Lesson 3",
    "text": "Lesson 3\nIn this lesson, we explored ….\nLesson 3"
  },
  {
    "objectID": "m202-svi-ejscreen.html",
    "href": "m202-svi-ejscreen.html",
    "title": "EJSCREEN tool",
    "section": "",
    "text": "In this lesson, you will use…."
  },
  {
    "objectID": "m202-svi-ejscreen.html#learning-objectives",
    "href": "m202-svi-ejscreen.html#learning-objectives",
    "title": "EJSCREEN tool",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter completing this lesson, you should be able to:\n\nDetermine…"
  },
  {
    "objectID": "m202-svi-ejscreen.html#introduction",
    "href": "m202-svi-ejscreen.html#introduction",
    "title": "EJSCREEN tool",
    "section": "Introduction",
    "text": "Introduction\nIn recent years, researchers have explored the intersection between environmental factors and public health, particularly concerning diseases like COVID-19 and non-small cell lung cancer (NSCLC). Studies have highlighted the impact of air pollution on disease susceptibility and outcomes, emphasizing the need for rigorous analysis and understanding of these relationships. This overview focuses on several key studies that utilize data science principles to investigate how environmental justice, air pollution, and demographic factors intersect, providing insights that contribute to open science principles and the data science life cycle."
  },
  {
    "objectID": "m202-svi-ejscreen.html#data-collection-and-integration",
    "href": "m202-svi-ejscreen.html#data-collection-and-integration",
    "title": "EJSCREEN tool",
    "section": "Data Collection and Integration",
    "text": "Data Collection and Integration\nGather comprehensive datasets from reliable sources such as the US EPA’s EJSCREEN tool and other public health databases like John Hopkins and County Health Rankings. Integrate relevant environmental data (e.g., air pollutant concentrations, pollution source proximity) with health outcomes data (e.g., COVID-19 prevalence, NSCLC incidence). Ensure data compatibility and quality through data cleaning and validation procedures.\n\nExploratory Data Analysis (EDA)\nConduct initial exploratory analyses to understand the distribution and relationships within the data. Visualize data using plots and charts to identify patterns and correlations between environmental factors, demographic variables, and health outcomes. Perform statistical tests to assess associations and identify potential confounding factors.\n\n\nModel Development and Analysis\nApply statistical models (e.g., regression analyses, machine learning algorithms) to quantify the relationships between environmental exposures and health outcomes. Adjust for confounders such as demographic characteristics (e.g., age, race/ethnicity) and socioeconomic factors (e.g., income, education). Validate models using cross-validation techniques to ensure robustness and generalizability of findings.\n\n\nInterpretation and Communication of Results\nInterpret findings in the context of environmental justice principles, highlighting disparities and vulnerabilities observed in different populations. Discuss implications for public health policy and environmental regulations based on study outcomes. Communicate results transparently using accessible language and visual aids to engage stakeholders and the broader community."
  },
  {
    "objectID": "m202-svi-ejscreen.html#the-data-science-life-cycle",
    "href": "m202-svi-ejscreen.html#the-data-science-life-cycle",
    "title": "EJSCREEN tool",
    "section": "The Data Science Life Cycle",
    "text": "The Data Science Life Cycle\nThe data science life cycle guides the systematic approach to handling data from collection to interpretation:\n\nData Acquisition\nObtain relevant datasets from sources like EJSCREEN, County Health Rankings, and specific studies’ databases. ### Data Preparation Clean and preprocess data to ensure accuracy and consistency, handling missing values and outliers appropriately.\n\n\nExploratory Data Analysis\nExplore data distributions, correlations, and initial insights to guide further analysis.\n\n\nModeling\nDevelop statistical models to test hypotheses and predict outcomes, considering factors like pollution exposure and demographic variables.\n\n\nEvaluation\nAssess model performance and validity through metrics and cross-validation techniques.\n\n\nDeployment\nCommunicate findings through reports, presentatio\nCongratulations! …. Now you should be able to:\n\nTest test…"
  },
  {
    "objectID": "m202-svi-ejscreen.html#lesson-3",
    "href": "m202-svi-ejscreen.html#lesson-3",
    "title": "EJSCREEN tool",
    "section": "Lesson 3",
    "text": "Lesson 3\nIn this lesson, we explored ….\nLesson 3"
  },
  {
    "objectID": "m203-grdiv1-pm25.html",
    "href": "m203-grdiv1-pm25.html",
    "title": "EJSCREEN tool",
    "section": "",
    "text": "In this lesson, you will use…."
  },
  {
    "objectID": "m203-grdiv1-pm25.html#learning-objectives",
    "href": "m203-grdiv1-pm25.html#learning-objectives",
    "title": "EJSCREEN tool",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nAfter completing this lesson, you should be able to:\n\nGain a general understanding of what particulate matter (PM) in the air means and"
  },
  {
    "objectID": "m203-grdiv1-pm25.html#introduction",
    "href": "m203-grdiv1-pm25.html#introduction",
    "title": "EJSCREEN tool",
    "section": "Introduction",
    "text": "Introduction\nIn recent years, researchers have explored the intersection between environmental factors and public health, particularly concerning diseases like COVID-19 and non-small cell lung cancer (NSCLC). Studies have highlighted the impact of air pollution on disease susceptibility and outcomes, emphasizing the need for rigorous analysis and understanding of these relationships. This overview focuses on several key studies that utilize data science principles to investigate how environmental justice, air pollution, and demographic factors intersect, providing insights that contribute to open science principles and the data science life cycle."
  },
  {
    "objectID": "m203-grdiv1-pm25.html#data-collection-and-integration",
    "href": "m203-grdiv1-pm25.html#data-collection-and-integration",
    "title": "EJSCREEN tool",
    "section": "Data Collection and Integration",
    "text": "Data Collection and Integration\nThe Global (GL) Annual PM2.5 Grids from MODIS, MISR and SeaWiFS Aerosol Optical Depth (AOD), v4.03 (1998 – 2019) can can be downloaded from the Socioeconomic Data and Applications Center ([SEDAC](https://sedac.ciesin.columbia.edu/)) (Center For International Earth Science Information Network-CIESIN-Columbia University 2022a).\nThe Global Gridded Relative Deprivation Index (GRDI), v1 (2010 – 2020) dataset can be downloaded from SEDAC as well (Center For International Earth Science Information Network-CIESIN-Columbia University 2022b).\nGather comprehensive datasets from reliable sources such as the US EPA’s EJSCREEN tool and other public health databases like John Hopkins and County Health Rankings. Integrate relevant environmental data (e.g., air pollutant concentrations, pollution source proximity) with health outcomes data (e.g., COVID-19 prevalence, NSCLC incidence). Ensure data compatibility and quality through data cleaning and validation procedures.\n\nExploratory Data Analysis (EDA)\n\n# import pycountry\n\n# import rasterio\n# import rasterio.mask\n# from rasterio.warp import calculate_default_transform, reproject, Resampling\n# import rasterstats\n# import matplotlib.pyplot as plt\n# import numpy as np\n\n\nimport xarray as xr\nimport rioxarray\nimport rasterstats\nfrom rasterio.enums import Resampling\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport geopandas as gpd\nimport pygadm\n\nimport plotly.graph_objects as go \n\n\n# Load rasters\ngrdi_path = r\"Z:\\Sedac\\GRDI\\data\\povmap-grdi-v1-geotiff\\final data\\povmap-grdi-v1.tif\"\npm25_path = r\"F:\\TOPSSCHOOL\\git\\TOPSTSCHOOL-air-quality\\data\\sdei-global-annual-gwr-pm2-5-modis-misr-seawifs-aod-v4-gl-03-2019-geotiff\\sdei-global-annual-gwr-pm2-5-modis-misr-seawifs-aod-v4-gl-03-2019.tif\"\n\n# grdi_raster = rasterio.open(grdi_path, masked=True)\n# pm25_raster = rasterio.open(pm25_path, masked=True)\n\n\n# Open the input and reference rasters\ngrdi_raster = rioxarray.open_rasterio(grdi_path, mask_and_scale=True)\npm25_raster = rioxarray.open_rasterio(pm25_path, mask_and_scale=True)\n\n\n# Resample the input raster to match the reference raster\ngrdi_raster = grdi_raster.rio.reproject_match(pm25_raster,resampling=Resampling.bilinear)\n\n\n# grdi_raster.rio.nodata\n\n\n# # grdi_arr = grdi_raster.read(1)\n# grdi_data[grdi_data == grdi_raster.rio.nodata] = np.nan\n# # grdi_transform = grdi_raster.transform\n\n# # pm25_arr = pm25_raster.read(1)\n# pm25_data[pm25_data == pm25_raster.rio.nodata] = np.nan\n# # pm25_transform = pm25_raster.transform\n\n\n# Plotting the rasters\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(10, 20))\n\n# Plot the original GRDI raster in the first subplot\nim1 = ax1.imshow(grdi_raster.values[0], cmap='viridis', interpolation='nearest')\nax1.set_title('Original GRDI Raster')\nfig.colorbar(im1, ax=ax1, orientation='horizontal', label='GRDI Values')\n\n# Plot the PM2.5 raster in the second subplot\nim2 = ax2.imshow(pm25_raster.values[0], cmap='hot', interpolation='nearest')\nax2.set_title('PM2.5 Raster')\nfig.colorbar(im2, ax=ax2, orientation='horizontal', label='PM2.5 Values')\n\n\n# Show the plots\nplt.tight_layout()\nplt.show()\n\n\n\n\n\ncountry_table = gpd.GeoDataFrame(pygadm.Names())\nlen(country_table)\n\n263\n\n\n\ncountry_table = country_table[~country_table['GID_0'].str.contains('\\d', na=False)]\nlen(country_table)\n\n254\n\n\n\n# Slice the first two rows\n# country_table = country_table.iloc[:10]\n\n\nstats_results = gpd.GeoDataFrame()\n\nfor index, row in country_table.iloc[:15].iterrows():\n    country = row['NAME_0']\n    country_GID = row['GID_0']\n    try:\n        country_poly =  pygadm.Items(admin=country_GID, content_level=0)\n    except:\n        print(country, \" skipped.\")\n        continue\n\n    # Create a mask for the polygons\n    grdi_country_zs= rasterstats.zonal_stats(country_poly, grdi_raster.values[0], affine=grdi_raster.rio.transform(), stats=\"count min mean max median std median range percentile_20 percentile_40 percentile_60 percentile_80\")\n    # # pm25_country_zs= rasterstats.zonal_stats(country_poly, pm25_arr, affine=pm25_transform, stats=\"count min mean max median std median range percentile_20 percentile_40 percentile_60 percentile_80\", nodata=pm25_raster.nodata)\n    # # Extract statistics into a dictionary\n    country_stats = {\n        'Country_Name': country,\n        'Country_GID' : country_GID,\n        'GRDI_Count': grdi_country_zs[0]['count'],\n        'GRDI_Min': grdi_country_zs[0]['min'],\n        'GRDI_Mean': grdi_country_zs[0]['mean'],\n        'GRDI_Max': grdi_country_zs[0]['max'],\n        'GRDI_Median': grdi_country_zs[0]['median'],\n        'GRDI_Std': grdi_country_zs[0]['std'],\n        'GRDI_Range': grdi_country_zs[0]['range'],\n        'GRDI_P20': grdi_country_zs[0]['percentile_20'],\n        'GRDI_P40': grdi_country_zs[0]['percentile_40'],\n        'GRDI_P60': grdi_country_zs[0]['percentile_60'],\n        'GRDI_P80': grdi_country_zs[0]['percentile_80'],\n        #     # 'PM25_Count': pm25_country_zs[0]['count'],\n        #     # 'PM25_Min': pm25_country_zs[0]['min'],\n        # 'PM25_Mean': pm25_country_zs[0]['mean'],\n        #     # 'PM25_Max': pm25_country_zs[0]['max'],\n        #     # 'PM25_Median': pm25_country_zs[0]['median'],\n        #     # 'PM25_Std': pm25_country_zs[0]['std'],\n        #     # 'PM25_Range': pm25_country_zs[0]['range'],\n        #     # 'PM25_P20': pm25_country_zs[0]['percentile_20'],\n        #     # 'PM25_P40': pm25_country_zs[0]['percentile_40'],\n        #     # 'PM25_P60': pm25_country_zs[0]['percentile_60'],\n        #     # 'PM25_P80': pm25_country_zs[0]['percentile_80'],\n        'geometry' : country_poly['geometry'].iloc[0]\n    }\n    country_stats_gdf = gpd.GeoDataFrame([country_stats], geometry='geometry')\n    # stats_results.append(country_stats_gdf)\n    stats_results = pd.concat([stats_results, country_stats_gdf], ignore_index=True)\n\n\n    \n    \n# stats_results_gdf = gpd.GeoDataFrame(stats_results)\n\n\nstats_results\n\n\n\n\n\n  \n    \n      \n      Country_Name\n      Country_GID\n      GRDI_Count\n      GRDI_Min\n      GRDI_Mean\n      GRDI_Max\n      GRDI_Median\n      GRDI_Std\n      GRDI_Range\n      GRDI_P20\n      GRDI_P40\n      GRDI_P60\n      GRDI_P80\n      geometry\n    \n  \n  \n    \n      0\n      Aruba\n      ABW\n      128\n      8.401757\n      24.567982\n      69.574066\n      17.407345\n      16.709677\n      61.172309\n      11.470143\n      14.758308\n      19.796543\n      41.071761\n      MULTIPOLYGON (((-69.97820 12.46990, -69.97790 ...\n    \n    \n      1\n      Afghanistan\n      AFG\n      7249\n      32.987610\n      88.145813\n      99.477043\n      92.789192\n      13.563214\n      66.489433\n      81.348100\n      91.397072\n      95.889288\n      97.815262\n      MULTIPOLYGON (((63.61550 29.46970, 63.58930 29...\n    \n    \n      2\n      Angola\n      AGO\n      104874\n      27.911964\n      91.580630\n      98.236549\n      93.519478\n      8.664615\n      70.324585\n      91.350552\n      92.808205\n      94.504108\n      95.326312\n      MULTIPOLYGON (((19.89890 -17.87670, 19.89080 -...\n    \n    \n      3\n      Anguilla\n      AIA\n      63\n      22.377043\n      50.662024\n      66.469498\n      51.731354\n      9.174919\n      44.092455\n      44.642786\n      49.759424\n      53.217512\n      58.195274\n      MULTIPOLYGON (((-63.02060 18.20750, -63.03110 ...\n    \n    \n      4\n      Åland\n      ALA\n      0\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      MULTIPOLYGON (((21.32310 59.74850, 21.32080 59...\n    \n    \n      5\n      Albania\n      ALB\n      19076\n      8.272310\n      61.513866\n      75.395561\n      66.220139\n      11.644754\n      67.123251\n      55.861691\n      64.445587\n      67.104332\n      68.589424\n      MULTIPOLYGON (((20.05410 39.69170, 20.03890 39...\n    \n    \n      6\n      Andorra\n      AND\n      0\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      MULTIPOLYGON (((1.61720 42.62410, 1.64800 42.6...\n    \n    \n      7\n      United Arab Emirates\n      ARE\n      18229\n      5.732072\n      42.347647\n      67.470955\n      45.034630\n      17.949307\n      61.738883\n      24.688158\n      38.623690\n      50.710212\n      61.909930\n      MULTIPOLYGON (((54.15410 22.75480, 53.33130 22...\n    \n    \n      8\n      Argentina\n      ARG\n      474297\n      7.572341\n      66.341158\n      81.701645\n      68.789696\n      10.416561\n      74.129304\n      66.774644\n      68.278297\n      69.335506\n      71.098463\n      MULTIPOLYGON (((-66.54580 -55.06100, -66.54860...\n    \n    \n      9\n      Armenia\n      ARM\n      9108\n      6.944193\n      59.871617\n      73.707901\n      64.272858\n      12.315193\n      66.763708\n      52.692970\n      61.288190\n      66.743028\n      69.004848\n      MULTIPOLYGON (((45.83190 39.83110, 45.84480 39...\n    \n    \n      10\n      American Samoa\n      ASM\n      106\n      17.402060\n      56.672170\n      77.748680\n      62.154976\n      14.928061\n      60.346621\n      42.584675\n      57.655781\n      65.079147\n      68.033958\n      MULTIPOLYGON (((-170.68060 -14.28250, -170.676...\n    \n    \n      11\n      Antarctica\n      ATA\n      0\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      MULTIPOLYGON (((168.33960 -83.34790, 168.34320...\n    \n    \n      12\n      French Southern Territories\n      ATF\n      0\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      MULTIPOLYGON (((69.85640 -49.72110, 69.85390 -...\n    \n    \n      13\n      Antigua and Barbuda\n      ATG\n      225\n      12.139688\n      48.543151\n      72.496132\n      52.339767\n      14.428936\n      60.356444\n      34.438569\n      46.360353\n      55.496131\n      61.775616\n      MULTIPOLYGON (((-61.67870 17.04100, -61.67930 ...\n    \n    \n      14\n      Australia\n      AUS\n      53124\n      0.045566\n      55.153753\n      80.935013\n      62.018303\n      14.123473\n      80.889447\n      44.820724\n      60.302293\n      62.995925\n      64.298001\n      MULTIPOLYGON (((147.36070 -42.93240, 147.35620...\n    \n  \n\n\n\n\n\ncolumn_chosen = 'GRDI_Max' #GRDI_Max, GRDI_Min, GRDI_Median\n# Plotting\nfig, ax = plt.subplots(1, 1, figsize=(15, 10))\nstats_results.plot(column=column_chosen, ax=ax, legend=True,\n    legend_kwds={'label': f\"{column_chosen} per country.\",\n                      'orientation': \"horizontal\"})\nax.set_title('Choropleth Map Showing GRDI Mean per country')\nax.set_axis_off()  # Turn off the axis numbers and ticks\nplt.show()\n\n\n\n\n\n# selected_countries = [\"Algeria\", \"Somalia\", \"Colombia\", \"Timor Leste\", \"Finland\", \"Nicaragua\", \"United Kingdom\", \"Mali\"]\nselected_countries = [\"Anguilla\", \"Armenia\", \"Angola\", \"Argentina\", \"Albania\", \"United Arab Emirates\", \"American Samoa\", \"Australia\" ]\nselected_countries = stats_results[stats_results['Country_Name'].isin(selected_countries)]\n\n\n# List of GRDI values and their corresponding properties\n#column, value name, color, symbol\ngrdi_data = [\n    ('GRDI_Mean', 'Mean', 'orange', 'diamond'),\n    ('GRDI_Median', 'Median', 'black', '142'),\n    ('GRDI_Min', 'Min', 'gray', '152'),\n    ('GRDI_Max', 'Max', 'gray', '151'),\n    ('GRDI_P20', 'Q20', 'blue', '142'),\n    ('GRDI_P40', 'Q40', 'purple', '142'),\n    ('GRDI_P60', 'Q60', 'green', '142'),\n    ('GRDI_P80', 'Q80', 'red', '142')\n]\n\n# Create a figure\nfig = go.Figure()\n\n# Add traces\nfor col, name, color, symbol in grdi_data:\n    fig.add_trace(go.Scatter(\n        x=selected_countries[col],\n        y=selected_countries['Country_Name'],\n        mode='markers',\n        name=name,\n        marker=dict(color=color, size=10, symbol=symbol)\n    ))\n\n# Customize layout\nfig.update_layout(\n    title='GRDI Statistics by Country',\n    xaxis_title='GRDI Values',\n    yaxis_title='Country Name',\n    yaxis=dict(tickmode='linear'),\n    legend_title='Statistics',\n    yaxis_type='category',\n    xaxis=dict(tickvals=[0, 20, 40, 60, 80, 100])\n)\n\n# Show plot\nfig.show()\n\n\n                                                \n\n\n\nfor index, row in selected_countries.iterrows():\n    row_df = gpd.GeoDataFrame([row], geometry='geometry').reset_index(drop=True)\n    print(row_df.loc[0,'Country_GID'])\n\n    # Extract the geometry and mask the reprojected data\n    # country_geometry = [row['geometry']]\n    try:\n        grdi_country = grdi_raster.rio.clip(row_df.geometry, grdi_raster.rio.crs)\n        pm25_country = pm25_raster.rio.clip(row_df.geometry, pm25_raster.rio.crs)\n    except:\n        continue\n\n    \n    grdi_country= grdi_country.squeeze()\n    pm25_country= pm25_country.squeeze()\n\n\n    # Subset the raster where values fall between quintiles\n    grdi_countryQ1 = grdi_country.where((grdi_country >= row_df.loc[0, 'GRDI_Min']) & (grdi_country <= row_df.loc[0, 'GRDI_P20']))\n    grdi_countryQ2 = grdi_country.where((grdi_country >= row_df.loc[0, 'GRDI_P20']) & (grdi_country <= row_df.loc[0, 'GRDI_P40']))\n    grdi_countryQ3 = grdi_country.where((grdi_country >= row_df.loc[0, 'GRDI_P40']) & (grdi_country <= row_df.loc[0, 'GRDI_P60']))\n    grdi_countryQ4 = grdi_country.where((grdi_country >= row_df.loc[0, 'GRDI_P60']) & (grdi_country <= row_df.loc[0, 'GRDI_P80']))\n    grdi_countryQ5 = grdi_country.where((grdi_country >= row_df.loc[0, 'GRDI_P80']) & (grdi_country <= row_df.loc[0, 'GRDI_Max']))\n\n\n    # Mask raster1 using raster2, keeping only the cells that intersect raster2\n    pm25_countryQ1 = pm25_country.where(grdi_countryQ1.notnull())\n    pm25_countryQ2 = pm25_country.where(grdi_countryQ2.notnull())\n    pm25_countryQ3 = pm25_country.where(grdi_countryQ3.notnull())\n    pm25_countryQ4 = pm25_country.where(grdi_countryQ4.notnull())\n    pm25_countryQ5 = pm25_country.where(grdi_countryQ5.notnull())\n\n    pm25_countryQ1v = pm25_countryQ1.mean().item()\n    pm25_countryQ2v = pm25_countryQ2.mean().item()\n    pm25_countryQ3v = pm25_countryQ3.mean().item()\n    pm25_countryQ4v = pm25_countryQ4.mean().item()\n    pm25_countryQ5v = pm25_countryQ5.mean().item()\n\n    selected_countries.at[index, 'PM25_Q1'] = pm25_countryQ1v\n    selected_countries.at[index, 'PM25_Q2'] = pm25_countryQ2v\n    selected_countries.at[index, 'PM25_Q3'] = pm25_countryQ3v\n    selected_countries.at[index, 'PM25_Q4'] = pm25_countryQ4v\n    selected_countries.at[index, 'PM25_Q5'] = pm25_countryQ5v\n\nAGO\n\n\nAIA\n\n\nALB\n\n\nARE\n\n\nARG\n\n\nARM\n\n\nASM\n\n\nAUS\n\n\n\n# List of GRDI values and their corresponding properties\n#column, value name, color, symbol\nplot_data =[\n    ('PM25_Q1', 'Q1', '#440154', '6'),  # Light Blue\n    ('PM25_Q2', 'Q2', '#31688E', '5'),  # Light Green\n    ('PM25_Q3', 'Q3', '#35B779', '7'),  # Yellow\n    ('PM25_Q4', 'Q4', '#FDE725', '8'),  # Orange\n    ('PM25_Q5', 'Q5', '#FF0000', '1')   # Red\n]\n\n# Create a figure\nfig = go.Figure()\n\n# Add traces\nfor col, name, color, symbol in plot_data:\n    xlog  = np.log(selected_countries[col])\n    fig.add_trace(go.Scatter(\n        x=xlog,\n        y=selected_countries['Country_Name'],\n        mode='markers+text',  # Add 'text' to mode\n        text=[f'<b>{name}</b>' for _ in selected_countries[col]],  # Repeat name for each point\n        name=name,\n        textfont=dict(color=color, size=12),\n        textposition='top center',  # Position the text above the symbol\n        marker_color=color,\n        marker_line_color=\"midnightblue\",\n        marker_symbol=symbol,\n        marker_size=14,\n        marker_line_width=2,\n        marker_opacity=0.6\n        ))\nfig.update_traces(textposition='top center')\n\n    # Customize layout\nfig.update_layout(\n    title='Mean PM2.5 in each GRDI Quartile by Country',\n    xaxis_title='PM2.5 Mean Values',\n    yaxis_title='Country Name',\n    yaxis=dict(tickmode='linear'),\n    legend_title='Statistics',\n    yaxis_type='category',\n    xaxis=dict(rangemode=\"tozero\"),\n    \n    #xaxis=dict(tickvals=[0, 20, 40, 60, 80, 100])\n    )\n\n# Show plot\nfig.show()\n\n\n                                                \n\n\n\n\nModel Development and Analysis\n\nselected_countries\n\n\n\n\n\n  \n    \n      \n      Country_Name\n      Country_GID\n      GRDI_Count\n      GRDI_Min\n      GRDI_Mean\n      GRDI_Max\n      GRDI_Median\n      GRDI_Std\n      GRDI_Range\n      GRDI_P20\n      GRDI_P40\n      GRDI_P60\n      GRDI_P80\n      geometry\n      PM25_Q1\n      PM25_Q2\n      PM25_Q3\n      PM25_Q4\n      PM25_Q5\n    \n  \n  \n    \n      2\n      Angola\n      AGO\n      104874\n      27.911964\n      91.580630\n      98.236549\n      93.519478\n      8.664615\n      70.324585\n      91.350552\n      92.808205\n      94.504108\n      95.326312\n      MULTIPOLYGON (((19.89890 -17.87670, 19.89080 -...\n      18.192181\n      15.553308\n      12.545550\n      13.884478\n      14.337870\n    \n    \n      3\n      Anguilla\n      AIA\n      63\n      22.377043\n      50.662024\n      66.469498\n      51.731354\n      9.174919\n      44.092455\n      44.642786\n      49.759424\n      53.217512\n      58.195274\n      MULTIPOLYGON (((-63.02060 18.20750, -63.03110 ...\n      NaN\n      4.300000\n      4.300000\n      4.300000\n      4.300000\n    \n    \n      5\n      Albania\n      ALB\n      19076\n      8.272310\n      61.513866\n      75.395561\n      66.220139\n      11.644754\n      67.123251\n      55.861691\n      64.445587\n      67.104332\n      68.589424\n      MULTIPOLYGON (((20.05410 39.69170, 20.03890 39...\n      15.438293\n      15.031855\n      14.699892\n      14.612475\n      15.709009\n    \n    \n      7\n      United Arab Emirates\n      ARE\n      18229\n      5.732072\n      42.347647\n      67.470955\n      45.034630\n      17.949307\n      61.738883\n      24.688158\n      38.623690\n      50.710212\n      61.909930\n      MULTIPOLYGON (((54.15410 22.75480, 53.33130 22...\n      47.710175\n      47.893559\n      47.822292\n      48.220722\n      49.729328\n    \n    \n      8\n      Argentina\n      ARG\n      474297\n      7.572341\n      66.341158\n      81.701645\n      68.789696\n      10.416561\n      74.129304\n      66.774644\n      68.278297\n      69.335506\n      71.098463\n      MULTIPOLYGON (((-66.54580 -55.06100, -66.54860...\n      7.519970\n      5.924110\n      6.083218\n      7.562082\n      8.672854\n    \n    \n      9\n      Armenia\n      ARM\n      9108\n      6.944193\n      59.871617\n      73.707901\n      64.272858\n      12.315193\n      66.763708\n      52.692970\n      61.288190\n      66.743028\n      69.004848\n      MULTIPOLYGON (((45.83190 39.83110, 45.84480 39...\n      19.292490\n      16.728804\n      16.334721\n      16.337336\n      15.342737\n    \n    \n      10\n      American Samoa\n      ASM\n      106\n      17.402060\n      56.672170\n      77.748680\n      62.154976\n      14.928061\n      60.346621\n      42.584675\n      57.655781\n      65.079147\n      68.033958\n      MULTIPOLYGON (((-170.68060 -14.28250, -170.676...\n      1.700000\n      1.700000\n      1.700000\n      1.700000\n      1.700000\n    \n    \n      14\n      Australia\n      AUS\n      53124\n      0.045566\n      55.153753\n      80.935013\n      62.018303\n      14.123473\n      80.889447\n      44.820724\n      60.302293\n      62.995925\n      64.298001\n      MULTIPOLYGON (((147.36070 -42.93240, 147.35620...\n      9.764974\n      7.189732\n      6.168250\n      5.864281\n      6.044264\n    \n  \n\n\n\n\nApply statistical models (e.g., regression analyses, machine learning algorithms) to quantify the relationships between environmental exposures and health outcomes. Adjust for confounders such as demographic characteristics (e.g., age, race/ethnicity) and socioeconomic factors (e.g., income, education). Validate models using cross-validation techniques to ensure robustness and generalizability of findings.\n\n\nInterpretation and Communication of Results\nInterpret findings in the context of environmental justice principles, highlighting disparities and vulnerabilities observed in different populations. Discuss implications for public health policy and environmental regulations based on study outcomes. Communicate results transparently using accessible language and visual aids to engage stakeholders and the broader community."
  },
  {
    "objectID": "m203-grdiv1-pm25.html#the-data-science-life-cycle",
    "href": "m203-grdiv1-pm25.html#the-data-science-life-cycle",
    "title": "EJSCREEN tool",
    "section": "The Data Science Life Cycle",
    "text": "The Data Science Life Cycle\nThe data science life cycle guides the systematic approach to handling data from collection to interpretation:\n\nData Acquisition\nObtain relevant datasets from sources like EJSCREEN, County Health Rankings, and specific studies’ databases. ### Data Preparation Clean and preprocess data to ensure accuracy and consistency, handling missing values and outliers appropriately.\n\n\nExploratory Data Analysis\nExplore data distributions, correlations, and initial insights to guide further analysis.\n\n\nModeling\nDevelop statistical models to test hypotheses and predict outcomes, considering factors like pollution exposure and demographic variables.\n\n\nEvaluation\nAssess model performance and validity through metrics and cross-validation techniques.\n\n\nDeployment\nCommunicate findings through reports, presentatio\nCongratulations! …. Now you should be able to:\n\nTest test…"
  },
  {
    "objectID": "m203-grdiv1-pm25.html#module-2-air-quality-home",
    "href": "m203-grdiv1-pm25.html#module-2-air-quality-home",
    "title": "EJSCREEN tool",
    "section": "Module 2: Air Quality Home",
    "text": "Module 2: Air Quality Home\nIn this lesson, we explored ….\nModule 2: Air Quality"
  }
]